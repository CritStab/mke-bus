{
  "name": "own",
  "version": "0.0.7",
  "author": {
    "name": "Christopher Cliff",
    "email": "ctcliff@gmail.com"
  },
  "description": "Simple `propertiesObject` creation for use with `Object.create()`",
  "keywords": [
    "own",
    "properties"
  ],
  "license": "MIT",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "1.11.0",
    "should": "1.2.2"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/christophercliff/own"
  },
  "bugs": {
    "url": "https://github.com/christophercliff/own/issues"
  },
  "readme": "# Own\n\n## Simple `propertiesObject` creation for use with `Object.create()`\n\nThe [`propertiesObject`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties) is painfully verbose. `own` is a helper function that makes it easy to create enumerable and writable `propertiesObject`s from an object literal.\n\n[![Build Status](https://secure.travis-ci.org/christophercliff/own.png?branch=master)](https://travis-ci.org/christophercliff/own)\n\n## Installation\n\n```\n$ npm install own\n```\n\n## Usage\n\nUse the result of `own()` as the second parameter in [`Object.create()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create):\n\n```js\nvar own = require('own')\nvar yourObject = Object.create(YOUR_PROTOTYPE, own({ hello: 'world' }))\n\nyourObject.hasOwnProperty('hello') // true\nyourObject.hello // 'world'\n```\n\n## Tests\n\nInstall the dependencies and run:\n\n```\n$ npm test\n```\n\n## License\n\nMIT License, see [LICENSE](https://github.com/christophercliff/own/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/christophercliff/own",
  "_id": "own@0.0.7",
  "_from": "own@0.0.7"
}
